[{"C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\index.js":"1","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\reportWebVitals.js":"2","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\App.js":"3","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\Header.js":"4","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\SubmitFile.js":"5","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\WelcomePage.js":"6","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\Chart.js":"7","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\TextPage.js":"8","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\TextDisplay.js":"9","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\ResultsPage.js":"10","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\DisplayChart.js":"11","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\StartDoneButton.js":"12","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\LinearProgress.js":"13"},{"size":809,"mtime":1610878394097,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1610820589954,"results":"16","hashOfConfig":"15"},{"size":1938,"mtime":1610933482204,"results":"17","hashOfConfig":"15"},{"size":659,"mtime":1610878394088,"results":"18","hashOfConfig":"15"},{"size":925,"mtime":1610862995191,"results":"19","hashOfConfig":"15"},{"size":1348,"mtime":1610878731457,"results":"20","hashOfConfig":"15"},{"size":1611,"mtime":1610933185421,"results":"21","hashOfConfig":"15"},{"size":1831,"mtime":1610927642235,"results":"22","hashOfConfig":"15"},{"size":1251,"mtime":1610927642233,"results":"23","hashOfConfig":"15"},{"size":1005,"mtime":1610932226827,"results":"24","hashOfConfig":"15"},{"size":1315,"mtime":1610933416056,"results":"25","hashOfConfig":"15"},{"size":1061,"mtime":1610927642231,"results":"26","hashOfConfig":"15"},{"size":1670,"mtime":1610927642218,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ud5n6l",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"30"},"C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\index.js",[],["65","66"],"C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\reportWebVitals.js",[],"C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\App.js",["67","68","69","70","71","72"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport TextDisplay from \"./components/TextDisplay\";\r\nimport Chart from \"./components/Chart\";\r\nimport SubmitFile from \"./components/SubmitFile\";\r\nimport ResultsPage from \"./components/ResultsPage\";\r\nimport WelcomePage from \"./components/WelcomePage\";\r\nimport TextPage from \"./components/TextPage\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  let fileReader;\r\n  const [text, settext] = useState([]);\r\n  const [textLoaded, setLoaded] = useState(false);\r\n  const [showResults, setShowResults] = useState(false);\r\n\r\n  const [vals, setvals] = useState([]);\r\n  const [done, setdone] = useState(false);\r\n\r\n\r\n\r\n  //set text loaded to false\r\n\r\n  const handleFileRead = (e) => {\r\n    const content = fileReader.result;\r\n    settext(content);\r\n    setLoaded(true);\r\n  };\r\n\r\n  const handleFileChosen = (file) => {\r\n    fileReader = new FileReader();\r\n    fileReader.onloadend = handleFileRead;\r\n    fileReader.readAsText(file);\r\n  };\r\n\r\n  const setResults = (val) => {\r\n    console.log(\"val\", val)\r\n    setShowResults(val);\r\n    console.log(showResults)\r\n\r\n  };\r\n\r\n  const handleClickDone = () => {\r\n    setdone(true);\r\n    fetch(\"/done\")\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => setvals(data));\r\n  };\r\n\r\n\r\n  // useEffect(() => {\r\n  //   if (progress >= 100 ) {\r\n  //     setdoneTimer(true);\r\n  //   }\r\n  // });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      {showResults ? <ResultsPage vals={vals}/> : null}\r\n      {textLoaded && !showResults ? null : <WelcomePage handleFileChosen={handleFileChosen}/>}\r\n      {textLoaded && !showResults ? (<TextPage text={text} setResults={setResults} handleClickDone={handleClickDone} done={done}/>) : null}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\Header.js",[],"C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\SubmitFile.js",["73","74","75","76"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, makeStyles, Typography} from \"@material-ui/core\";\r\nimport TextDisplay from \"./TextDisplay\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nfunction SubmitFile({handleFileChosen}) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <input\r\n        type=\"file\"\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        accept=\".txt\"\r\n        onChange={(e) => handleFileChosen(e.target.files[0])}\r\n      />\r\n      <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"outlined\" color=\"secondary\" component=\"span\" size=\"large\" startIcon={<AddIcon/>}>\r\n          Submit File\r\n        </Button>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\nexport default SubmitFile;\r\n","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\WelcomePage.js",["77"],"import React from 'react';\r\nimport {Card, Paper, Typography, makeStyles } from '@material-ui/core';\r\nimport SubmitFile from './SubmitFile';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n      height: '100vh',\r\n      marginTop: '-5vh',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignContent: 'center',\r\n      flexDirection: 'column'\r\n    },\r\n    submitButton: {\r\n    },\r\n    cardStyle: {\r\n      marginBottom: '30px',\r\n      boxShadow: 'none'\r\n    },\r\n    offBlack: {\r\n      color: '#333'\r\n    },\r\n    space: {\r\n      letterSpacing: '2px',\r\n      paddingBottom: '5px'\r\n    }\r\n  }));\r\n\r\nfunction WelcomePage({handleFileChosen}) {\r\n    const classes = useStyles();\r\n    return(\r\n        <div className={classes.root}>\r\n            <Card className={classes.cardStyle}>\r\n                <Typography variant=\"h6\" className={classes.offBlack, classes.space}>\r\n                    WELCOME TO NEURO FOCUS\r\n                </Typography>\r\n                <Typography variant=\"h4\" className={classes.offBlack}>\r\n                    Select a file for upload\r\n                </Typography>\r\n            </Card>\r\n            <Paper className={classes.submitButton} elevation={0}>\r\n                <SubmitFile handleFileChosen={handleFileChosen} />\r\n            </Paper>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default WelcomePage;\r\n","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\Chart.js",["78"],"import React from 'react';\r\nimport {makeStyles, Typography} from '@material-ui/core';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n\r\n\r\n  }));\r\n\r\nconst options = {\r\n  title: {\r\n    display: true,\r\n    text: 'Attention Over Time',\r\n    align: 'center',\r\n    fontSize: 24\r\n  },\r\n  legend: {\r\n    display: false\r\n  },\r\n  chart: {\r\n    height: 500,\r\n    type: 'line',\r\n  },\r\n  scales: {\r\n    yAxes: [{\r\n      scaleLabel: {\r\n        display: true,\r\n        labelString: 'Percent Change',\r\n        fontSize: 24\r\n      }\r\n    }],\r\n    xAxes: [{\r\n      scaleLabel: {\r\n        display: true,\r\n        labelString: 'Time',\r\n        fontSize: 24\r\n      }\r\n    }],\r\n  }\r\n}\r\n\r\n//vals is the variable that has all the data values\r\n\r\nfunction Chart({vals}) {\r\n    var ceil = require('math-ceil');\r\n    const array = [0, 1, 2, 3];\r\n    const duration = array.length;\r\n\r\n    console.log(0.8);\r\n    const classes = useStyles();\r\n    const state = {\r\n      /* series: [{\r\n        name: 'Attention',\r\n        data: [10, 50, 70]\r\n      }] */\r\n\r\n      labels: [\r\n        0.8,\r\n        0.8+ceil(duration/4)*0.8,\r\n        0.8+ceil(duration/2)*0.8,\r\n        0.8+(duration-1)*0.8\r\n      ],\r\n      datasets: [\r\n        {\r\n          lineTension: 0.5,\r\n          borderColor: 'black',\r\n          borderWidth: 3,\r\n          fill: false,\r\n          data: vals //put the vals here?\r\n        }\r\n      ]\r\n\r\n    }\r\n    return(\r\n        <div className={classes.root}>\r\n          <Line\r\n            data={state}\r\n            options={options}\r\n          />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart\r\n","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\TextPage.js",["79","80","81","82","83"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Paper, Typography, makeStyles } from \"@material-ui/core\";\r\nimport TextDisplay from \"./TextDisplay\";\r\nimport DisplayChart from \"./DisplayChart\";\r\nimport StartDoneButton from \"./StartDoneButton\";\r\nimport ResultsPage from \"./ResultsPage\";\r\n\r\n//put the states in here. Then, once the stop button is clicked and the data is retreived, then use hoooks to set the state and send those\r\n//props to the chart.\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    marginTop: \"-5vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  //   cardStyle: {\r\n  //       marginBottom: '30px',\r\n  //       boxShadow: 'none'\r\n  // },\r\n}));\r\n\r\nfunction TextPage({ text , setResults, handleClickDone, done}) {\r\n  const classes = useStyles();\r\n  const [start, setstart] = useState(true);\r\n//   const [vals, setvals] = useState([]);\r\n//   const [done, setdone] = useState(false);\r\n  //const [showResults, setShowResults] = useState(false);\r\n\r\n  const handleClickStart = () => {\r\n    setstart(false);\r\n    fetch(\"/start\");\r\n  };\r\n\r\n//   const handleClickDone = () => {\r\n//     setdone(true);\r\n//     fetch(\"/done\")\r\n//       .then((response) => {\r\n//         if (response.ok) {\r\n//           return response.json();\r\n//         }\r\n//       })\r\n//       .then((data) => setvals(data));\r\n//   };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {start ? null : <TextDisplay text={text} />}\r\n      {done ? (\r\n        <DisplayChart setResults={setResults} />\r\n      ) : (\r\n        <StartDoneButton\r\n          handleClickStart={handleClickStart}\r\n          handleClickDone={handleClickDone}\r\n          start={start}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default TextPage;\r\n","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\TextDisplay.js",["84","85","86","87","88","89"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  Card,\r\n  Paper,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport raw from \"../data/sample-text.txt\";\r\nimport StartDoneButton from \"./StartDoneButton\";\r\nimport DisplayChart from \"./DisplayChart\";\r\n\r\n\r\n//once the start button is clicked, then possibly have the border of the text display turn\r\n//green or indicate \"running\" until the user presses stop\r\n\r\n//once the user hasa pressed stop, make the view results button available and then display the graph\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardStyle: {\r\n    width: '550px',\r\n    boxShadow: 'none',\r\n    marginBottom: '10px'\r\n  },\r\n  textStyle: {\r\n    color: '#333',\r\n    textAlign: 'left',\r\n  }\r\n\r\n}));\r\n\r\nfunction TextDisplay({text}) {\r\n  const classes = useStyles();\r\n\r\n\r\n//   useEffect(() => {\r\n//     fetch(raw)\r\n//       .then((r) => r.text())\r\n//       .then((text) => {\r\n//         settext(text);\r\n//       });\r\n//   });\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.cardStyle}>\r\n        <CardContent>\r\n          <Typography className={classes.textStyle}>{text}</Typography>\r\n        </CardContent>\r\n      </Card>\r\n    \r\n    </div>\r\n  );\r\n}\r\nexport default TextDisplay;\r\n","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\ResultsPage.js",["90","91","92"],"import React from 'react';\r\nimport {Card, Paper, Typography, Button, makeStyles } from '@material-ui/core';\r\nimport Chart from './Chart';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n      height: '100vh',\r\n      // marginTop: '-5vh',\r\n      // display: 'flex',\r\n      // justifyContent: 'center',\r\n      // alignContent: 'center',\r\n      // flexDirection: 'row'\r\n    },\r\n    leftSide: {\r\n    },\r\n    rightSide: {\r\n\r\n    },\r\n    cardStyle: {\r\n      marginBottom: '30px',\r\n      boxShadow: 'none'\r\n    },\r\n    offBlack: {\r\n      color: '#333'\r\n    },\r\n    space: {\r\n      letterSpacing: '2px',\r\n      paddingBottom: '5px'\r\n    }\r\n  }));\r\n\r\nfunction ResultsPage({vals}) {\r\n    const classes = useStyles();\r\n    return(\r\n        <div className={classes.root}>\r\n          {/* questions and right/wrong answers */}\r\n\r\n            <Chart vals={vals}/>\r\n            <Button variant=\"outlined\" color=\"secondary\">Email my results</Button>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ResultsPage;\r\n","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\DisplayChart.js",["93","94","95"],"import React, {useEffect, useState, Card, CardContent, Typography} from 'react';\r\nimport { Button, makeStyles} from \"@material-ui/core\";\r\nimport Chart from './Chart';\r\nimport ResultsPage from './ResultsPage';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  // root: {\r\n  //   // flexGrow: 1,\r\n  // },\r\n\r\n}));\r\n\r\nfunction DisplayChart({setResults, vals}) {\r\n    const classes = useStyles();\r\n    const [doneClicked, setDoneClicked] = useState(false);\r\n\r\n    const handleClick = () => {\r\n      setDoneClicked(true);\r\n      setResults(true);\r\n      console.log(\"handleclick\")\r\n    };\r\n\r\n\r\n    return(\r\n        <div>\r\n          <Button onClick={handleClick} variant=\"outlined\" color=\"secondary\">View Results</Button>\r\n          {doneClicked ? <ResultsPage vals={vals}/> : null}\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"body\">\r\n                The graph displays how the user's attention and concentration is changing over time. We calculate attention by extracting the ratio of theta waves to beta waves from EEG data and compare it to a baseline value of attention of the user, plotting the data as the change in percent relative to the baseline.\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DisplayChart\r\n","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\StartDoneButton.js",["96","97","98"],"import React, {useState, useEffect} from 'react';\r\nimport {Button, makeStyles } from '@material-ui/core';\r\nimport LinearProgress from \"./LinearProgress\"\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n      // flexGrow: 1,  \r\n    },\r\n    title: {\r\n        // flexGrow: 1\r\n    },\r\n    startBttn: {\r\n        color: '#00c853',\r\n        borderColor: '#00c853'\r\n\r\n    },\r\n    stopBttn: {\r\n        color: '#d50000',\r\n        borderColor: '#d50000'\r\n    }\r\n\r\n  }));\r\n\r\n\r\n\r\n\r\nfunction StartDoneButton({handleClickStart, handleClickDone, start}) {\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            {start ? <Button className={classes.startBttn} onClick={handleClickStart} variant=\"outlined\" component=\"span\" size=\"large\">\r\n                Start\r\n            </Button> : <Button className={classes.stopBttn} onClick={handleClickDone} variant=\"outlined\" component=\"span\" size=\"large\">\r\n                Stop\r\n            </Button>}\r\n            \r\n        </div>\r\n\r\n    );\r\n}\r\nexport default StartDoneButton\r\n","C:\\Users\\brook\\OneDrive\\Desktop\\hack\\neuro-focus-app\\src\\components\\LinearProgress.js",["99","100"],"import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default function LinearWithValueLabel() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = useState(3.67);\r\n  const [doneTimer, setdoneTimer] = useState(false);\r\n  console.log(progress)\r\n\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) => (prevProgress >= 100 ? 100 : prevProgress + 3.33));\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (progress >= 100 ) {\r\n      setdoneTimer(true);\r\n    }\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgressWithLabel value={progress} />\r\n    </div>\r\n  );\r\n}",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"109","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"110","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":19},{"ruleId":"105","severity":1,"message":"111","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":13},{"ruleId":"105","severity":1,"message":"112","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":18},{"ruleId":"105","severity":1,"message":"113","line":9,"column":10,"nodeType":"107","messageId":"108","endLine":9,"endColumn":15},{"ruleId":"105","severity":1,"message":"106","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"114","line":1,"column":28,"nodeType":"107","messageId":"108","endLine":1,"endColumn":36},{"ruleId":"105","severity":1,"message":"115","line":2,"column":30,"nodeType":"107","messageId":"108","endLine":2,"endColumn":40},{"ruleId":"105","severity":1,"message":"110","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":35,"column":69,"nodeType":"118","messageId":"119","endLine":35,"endColumn":70},{"ruleId":"105","severity":1,"message":"115","line":2,"column":21,"nodeType":"107","messageId":"108","endLine":2,"endColumn":31},{"ruleId":"105","severity":1,"message":"106","line":1,"column":27,"nodeType":"107","messageId":"108","endLine":1,"endColumn":36},{"ruleId":"105","severity":1,"message":"120","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"113","line":2,"column":16,"nodeType":"107","messageId":"108","endLine":2,"endColumn":21},{"ruleId":"105","severity":1,"message":"115","line":2,"column":23,"nodeType":"107","messageId":"108","endLine":2,"endColumn":33},{"ruleId":"105","severity":1,"message":"121","line":6,"column":8,"nodeType":"107","messageId":"108","endLine":6,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"114","line":1,"column":28,"nodeType":"107","messageId":"108","endLine":1,"endColumn":36},{"ruleId":"105","severity":1,"message":"113","line":6,"column":3,"nodeType":"107","messageId":"108","endLine":6,"endColumn":8},{"ruleId":"105","severity":1,"message":"122","line":9,"column":8,"nodeType":"107","messageId":"108","endLine":9,"endColumn":11},{"ruleId":"105","severity":1,"message":"123","line":10,"column":8,"nodeType":"107","messageId":"108","endLine":10,"endColumn":23},{"ruleId":"105","severity":1,"message":"124","line":11,"column":8,"nodeType":"107","messageId":"108","endLine":11,"endColumn":20},{"ruleId":"105","severity":1,"message":"120","line":2,"column":9,"nodeType":"107","messageId":"108","endLine":2,"endColumn":13},{"ruleId":"105","severity":1,"message":"113","line":2,"column":15,"nodeType":"107","messageId":"108","endLine":2,"endColumn":20},{"ruleId":"105","severity":1,"message":"115","line":2,"column":22,"nodeType":"107","messageId":"108","endLine":2,"endColumn":32},{"ruleId":"105","severity":1,"message":"106","line":1,"column":16,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"111","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":13},{"ruleId":"105","severity":1,"message":"125","line":14,"column":11,"nodeType":"107","messageId":"108","endLine":14,"endColumn":18},{"ruleId":"105","severity":1,"message":"114","line":1,"column":16,"nodeType":"107","messageId":"108","endLine":1,"endColumn":24},{"ruleId":"105","severity":1,"message":"106","line":1,"column":26,"nodeType":"107","messageId":"108","endLine":1,"endColumn":35},{"ruleId":"105","severity":1,"message":"126","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":22},{"ruleId":"105","severity":1,"message":"127","line":44,"column":10,"nodeType":"107","messageId":"108","endLine":44,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":57,"column":3,"nodeType":"107","endLine":57,"endColumn":12,"suggestions":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'TextDisplay' is defined but never used.","'Chart' is defined but never used.","'SubmitFile' is defined but never used.","'Paper' is defined but never used.","'useState' is defined but never used.","'Typography' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Card' is defined but never used.","'ResultsPage' is defined but never used.","'raw' is defined but never used.","'StartDoneButton' is defined but never used.","'DisplayChart' is defined but never used.","'classes' is assigned a value but never used.","'LinearProgress' is defined but never used.","'doneTimer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setdoneTimer'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [progress] as a second argument to the useEffect Hook.",["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},"Add dependencies array: [progress]",{"range":"136","text":"137"},[1541,1541],", [progress]"]